You are modifying a JS game with this file layout:
world-utils.js, rig-definitions.js, items-and-crafting.js, spawns.js, region-manager.js, nen-core.js, nen-advanced.js, nen-combat.js, hud.js, game.js, enemies.js, rig-editor.js, index.html, styles.css.

Hard rules for code output (follow exactly):

Before removing any feature, ask if it’s relevant; otherwise do not remove.

Constraints: Do not break existing HUD buttons, attacks, gameplay, or terrain generation. Keep index.html and styles.css working. Use modern, clean JS (no transpile step).

Deliverables per task:

The code per the rules above

A short “What changed / Why” note

Quick manual test steps


Task 12 — Enemies & counterplay

Files: enemies.js, nen-combat.js, hud.js
Prompt:

Add archetypes with Nen literacy:

Bruiser: telegraphs Ko to a limb (glow); blocking with correct Ryu distribution mitigates it.

Assassin: enters Zetsu and attempts backstab; Gyo counters.

Emitter/Conjurer adds: ranged traps/orbs that interact with In/En.
HUD subtly indicates detected enemy aura flows when Gyo is active. Follow my output rules.

Done check: Player technique choice (Gyo/Ryu) measurably changes survival.

Task 13 — Training minigames & progression caps

Files: hud.js, nen-advanced.js, game.js
Prompt:

Implement four lightweight minigames that permanently raise caps or efficiencies:

Ren hold meter (extends Ren duration cap)

Gyo numbers (accuracy → crit window bonus cap)

Ryu drill (faster/more precise redistribution)

Shu rock test (Shu efficiency)
Persist results; show ceilings in HUD tooltips. Follow my output rules.

Done check: Successful minigames increase the displayed caps and change gameplay feel.

Task 14 — Post-Mortem Nen, curses, exorcism

Files: nen-advanced.js, enemies.js, hud.js
Prompt:

Add Grudge bar; on player death with full Grudge, apply a Curse Mark (DoT+slow) to killer.

Enemies can leave lingering curses; add consumable/quest to exorcise.
Follow my output rules.

Done check: The effect triggers on death appropriately; exorcism clears it.

Task 15 — Save/Load + QA polish

Files: game.js, hud.js
Prompt:

Serialize: inventory, vows, nenType, stat ceilings, region progress, and Nen pools. On load, restore HUD and all toggles. Add a quick in-game test panel (dev-only) to flip modes and spawn target dummies. Follow my output rules.


Done check: Quit/reload returns to the same state; dev panel toggles help QA.


